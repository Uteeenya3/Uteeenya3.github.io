{"version":3,"sources":["components/MenuMakanan/MenuMakanan.js","components/MenuMinuman/MenuMinuman.js","App.js","serviceWorker.js","index.js"],"names":["menuMakanan","props","stock","style","border","width","margin","namaMenu","hargaMenu","MenuMinuman","this","Component","App","handleGantiNama","nama","setState","namaResto","handleChangeNamaPembeli","event","namaPembeli","target","value","handleChangeKeterangan","keterangan","handleChangeJenisPembayaran","jenisPembayaran","handleChange","name","state","harga","id","className","onClick","marginTop","onChange","MenuMakanan","map","menu","index","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.67eee758.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nvar menuMakanan = (props) => {\r\n  if (props.stock !== 0) {\r\n    return (\r\n      <div style={{ border: \"1px solid green\", width: 300, margin: \"auto\" }}>\r\n        <p>Nama Menu: {props.namaMenu}</p>\r\n        <p>Harga: Rp. {props.hargaMenu}</p>\r\n        <p>Stock: {props.stock}</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default menuMakanan;\r\n","// const { Component } = require(\"react\");\r\n\r\n// import App from \"../../App\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass MenuMinuman extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ border: \"1px solid green\", width: 300, margin: \"auto\" }}>\r\n        <p>Nama Menu: {this.props.namaMenu}</p>\r\n        <p>Harga: {this.props.hargaMenu}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuMinuman;\r\n","import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport MenuMakanan from \"./components/MenuMakanan/MenuMakanan\";\nimport MenuMinuman from \"./components/MenuMinuman/MenuMinuman\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      namaResto: \"Bakso Bowo\",\n      namaPembeli: \"\",\n      keterangan: \"\",\n      jenisPembayaran: \"\",\n      menuMakanan: [\n        { nama: \"Bakso Bakar\", harga: 25000, stock: 10 },\n        { nama: \"Mie Ayam\", harga: 30000, stock: 1 },\n      ],\n      MenuMinuman: [\n        { id: 1, nama: \"Thai Tea\", harga: 10000 },\n        { id: 2, nama: \"Es Tea\", harga: 15000 },\n        { id: 3, nama: \"Jus Tomat\", harga: 20000 },\n        { id: 4, nama: \"Jus Jeruk\", harga: 15000 },\n        { id: 5, nama: \"Jus Anggur\", harga: 20000 },\n      ],\n    };\n  }\n\n  handleGantiNama = (nama) => {\n    this.setState({ namaResto: nama });\n  };\n\n  handleChangeNamaPembeli = (event) => {\n    this.setState({ namaPembeli: event.target.value });\n  };\n\n  handleChangeKeterangan = (event) => {\n    this.setState({ keterangan: event.target.value });\n  };\n\n  handleChangeJenisPembayaran = (event) => {\n    this.setState({ jenisPembayaran: event.target.value });\n  };\n\n  handleChange = (event) => {\n    var name = event.target.name;\n    var value = event.target.value;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Resto {this.state.namaResto}</h1>\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => this.handleGantiNama(\"Adiey\")}\n        >\n          Ganti Nama Resto\n        </button>\n\n        <div className=\"row\" style={{ marginTop: \"10px\" }}>\n          <div className=\"col-md-4 offset-md-4\">\n            <form>\n              <div className=\"form-group\">\n                <label>Nama pembeli: </label>\n                <input\n                  className=\"form-control\"\n                  name=\"namaPembeli\"\n                  onChange={this.handleChange}\n                  value={this.state.namaPembeli}\n                />\n                <samll>Nama pembeli: {this.state.namaPembeli}</samll>\n              </div>\n              <div className=\"form-group\">\n                <label>Keterangan: </label>\n                <textarea\n                  className=\"form-control\"\n                  name=\"keterangan\"\n                  onChange={this.handleChange}\n                  value={this.state.keterangan}\n                ></textarea>\n                <small>Keterangan: {this.state.keterangan}</small>\n              </div>\n              <div className=\"form-group\">\n                <label>Jenis pembayaran: </label>\n                <select\n                  className=\"form-control\"\n                  name=\"jenisPembayaran\"\n                  onChange={this.handleChange}\n                  value={this.state.jenisPembayaran}\n                >\n                  <option value=\"cash\">Cash</option>\n                  <option value=\"kartuKredit\">Kartu Kredit</option>\n                  <option value=\"voucher\">Voucher</option>\n                </select>\n                <small>Jenis pembayaran: {this.state.jenisPembayaran}</small>\n              </div>\n            </form>\n          </div>\n        </div>\n\n        <h2>Menu Makanan</h2>\n        <MenuMakanan\n          namaMenu={this.state.menuMakanan[0].nama}\n          hargaMenu={this.state.menuMakanan[0].harga}\n          stock={this.state.menuMakanan[0].stock}\n        />\n        <MenuMakanan\n          namaMenu={this.state.menuMakanan[1].nama}\n          hargaMenu={this.state.menuMakanan[1].harga}\n          stock={this.state.menuMakanan[1].stock}\n        />\n\n        <h2>Menu Minuman</h2>\n        {this.state.MenuMinuman.map((menu, index) => (\n          <MenuMinuman\n            key={menu.id}\n            namaMenu={menu.nama}\n            hargaMenu={menu.harga}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}